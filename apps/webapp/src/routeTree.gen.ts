/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as TeamInviteIndexImport } from './routes/team-invite/index'
import { Route as SignupIndexImport } from './routes/signup/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as EventInviteIndexImport } from './routes/event-invite/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as TeamInviteSignupIndexImport } from './routes/team-invite/signup/index'
import { Route as TeamInviteAcceptIndexImport } from './routes/team-invite/accept/index'
import { Route as SignupProfileIndexImport } from './routes/signup/profile/index'
import { Route as SignupOrganizationIndexImport } from './routes/signup/organization/index'
import { Route as EventInviteSignupIndexImport } from './routes/event-invite/signup/index'
import { Route as EventInviteAcceptIndexImport } from './routes/event-invite/accept/index'
import { Route as DashboardAccountIndexImport } from './routes/dashboard/account/index'
import { Route as DashboardOrgTeamImport } from './routes/dashboard/org/team'
import { Route as TeamInviteSignupProfileIndexImport } from './routes/team-invite/signup/profile/index'
import { Route as EventInviteSignupProfileIndexImport } from './routes/event-invite/signup/profile/index'
import { Route as DashboardOrgTeamIndexImport } from './routes/dashboard/org/team/index'
import { Route as DashboardOrgRequestsIndexImport } from './routes/dashboard/org/requests/index'
import { Route as DashboardOrgReportsIndexImport } from './routes/dashboard/org/reports/index'
import { Route as DashboardOrgHelpIndexImport } from './routes/dashboard/org/help/index'
import { Route as DashboardOrgGuestsIndexImport } from './routes/dashboard/org/guests/index'
import { Route as DashboardOrgEventsIndexImport } from './routes/dashboard/org/events/index'
import { Route as DashboardOrgCalendarIndexImport } from './routes/dashboard/org/calendar/index'
import { Route as DashboardGuestRequestsIndexImport } from './routes/dashboard/guest/requests/index'
import { Route as DashboardGuestReportsIndexImport } from './routes/dashboard/guest/reports/index'
import { Route as DashboardGuestHelpIndexImport } from './routes/dashboard/guest/help/index'
import { Route as DashboardGuestEventsIndexImport } from './routes/dashboard/guest/events/index'
import { Route as DashboardGuestCalendarIndexImport } from './routes/dashboard/guest/calendar/index'
import { Route as DashboardOrgTeamRolesImport } from './routes/dashboard/org/team/roles'
import { Route as DashboardOrgEventsIdImport } from './routes/dashboard/org/events/$id'
import { Route as DashboardGuestEventsIdImport } from './routes/dashboard/guest/events/$id'
import { Route as DashboardOrgEventsCreateEventIndexImport } from './routes/dashboard/org/events/create-event/index'
import { Route as DashboardOrgEventsIdIndexImport } from './routes/dashboard/org/events/$id/index'
import { Route as DashboardGuestEventsIdIndexImport } from './routes/dashboard/guest/events/$id/index'
import { Route as DashboardOrgEventsIdRequestsIndexImport } from './routes/dashboard/org/events/$id/requests/index'
import { Route as DashboardOrgEventsIdDetailsIndexImport } from './routes/dashboard/org/events/$id/details/index'
import { Route as DashboardOrgEventsIdContentIndexImport } from './routes/dashboard/org/events/$id/content/index'
import { Route as DashboardOrgEventsIdAttendeesIndexImport } from './routes/dashboard/org/events/$id/attendees/index'
import { Route as DashboardOrgEventsIdAgendaIndexImport } from './routes/dashboard/org/events/$id/agenda/index'
import { Route as DashboardGuestEventsIdRequestsIndexImport } from './routes/dashboard/guest/events/$id/requests/index'
import { Route as DashboardGuestEventsIdDetailsIndexImport } from './routes/dashboard/guest/events/$id/details/index'
import { Route as DashboardGuestEventsIdContentIndexImport } from './routes/dashboard/guest/events/$id/content/index'
import { Route as DashboardGuestEventsIdAttendeesIndexImport } from './routes/dashboard/guest/events/$id/attendees/index'
import { Route as DashboardGuestEventsIdAgendaIndexImport } from './routes/dashboard/guest/events/$id/agenda/index'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeamInviteIndexRoute = TeamInviteIndexImport.update({
  path: '/team-invite/',
  getParentRoute: () => rootRoute,
} as any)

const SignupIndexRoute = SignupIndexImport.update({
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const EventInviteIndexRoute = EventInviteIndexImport.update({
  path: '/event-invite/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const TeamInviteSignupIndexRoute = TeamInviteSignupIndexImport.update({
  path: '/team-invite/signup/',
  getParentRoute: () => rootRoute,
} as any)

const TeamInviteAcceptIndexRoute = TeamInviteAcceptIndexImport.update({
  path: '/team-invite/accept/',
  getParentRoute: () => rootRoute,
} as any)

const SignupProfileIndexRoute = SignupProfileIndexImport.update({
  path: '/signup/profile/',
  getParentRoute: () => rootRoute,
} as any)

const SignupOrganizationIndexRoute = SignupOrganizationIndexImport.update({
  path: '/signup/organization/',
  getParentRoute: () => rootRoute,
} as any)

const EventInviteSignupIndexRoute = EventInviteSignupIndexImport.update({
  path: '/event-invite/signup/',
  getParentRoute: () => rootRoute,
} as any)

const EventInviteAcceptIndexRoute = EventInviteAcceptIndexImport.update({
  path: '/event-invite/accept/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAccountIndexRoute = DashboardAccountIndexImport.update({
  path: '/account/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgTeamRoute = DashboardOrgTeamImport.update({
  path: '/org/team',
  getParentRoute: () => DashboardRoute,
} as any)

const TeamInviteSignupProfileIndexRoute =
  TeamInviteSignupProfileIndexImport.update({
    path: '/team-invite/signup/profile/',
    getParentRoute: () => rootRoute,
  } as any)

const EventInviteSignupProfileIndexRoute =
  EventInviteSignupProfileIndexImport.update({
    path: '/event-invite/signup/profile/',
    getParentRoute: () => rootRoute,
  } as any)

const DashboardOrgTeamIndexRoute = DashboardOrgTeamIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardOrgTeamRoute,
} as any)

const DashboardOrgRequestsIndexRoute = DashboardOrgRequestsIndexImport.update({
  path: '/org/requests/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgReportsIndexRoute = DashboardOrgReportsIndexImport.update({
  path: '/org/reports/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgHelpIndexRoute = DashboardOrgHelpIndexImport.update({
  path: '/org/help/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgGuestsIndexRoute = DashboardOrgGuestsIndexImport.update({
  path: '/org/guests/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgEventsIndexRoute = DashboardOrgEventsIndexImport.update({
  path: '/org/events/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgCalendarIndexRoute = DashboardOrgCalendarIndexImport.update({
  path: '/org/calendar/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGuestRequestsIndexRoute =
  DashboardGuestRequestsIndexImport.update({
    path: '/guest/requests/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardGuestReportsIndexRoute = DashboardGuestReportsIndexImport.update(
  {
    path: '/guest/reports/',
    getParentRoute: () => DashboardRoute,
  } as any,
)

const DashboardGuestHelpIndexRoute = DashboardGuestHelpIndexImport.update({
  path: '/guest/help/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGuestEventsIndexRoute = DashboardGuestEventsIndexImport.update({
  path: '/guest/events/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGuestCalendarIndexRoute =
  DashboardGuestCalendarIndexImport.update({
    path: '/guest/calendar/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardOrgTeamRolesRoute = DashboardOrgTeamRolesImport.update({
  path: '/roles',
  getParentRoute: () => DashboardOrgTeamRoute,
} as any)

const DashboardOrgEventsIdRoute = DashboardOrgEventsIdImport.update({
  path: '/org/events/$id',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGuestEventsIdRoute = DashboardGuestEventsIdImport.update({
  path: '/guest/events/$id',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardOrgEventsCreateEventIndexRoute =
  DashboardOrgEventsCreateEventIndexImport.update({
    path: '/org/events/create-event/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardOrgEventsIdIndexRoute = DashboardOrgEventsIdIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardOrgEventsIdRoute,
} as any)

const DashboardGuestEventsIdIndexRoute =
  DashboardGuestEventsIdIndexImport.update({
    path: '/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

const DashboardOrgEventsIdRequestsIndexRoute =
  DashboardOrgEventsIdRequestsIndexImport.update({
    path: '/requests/',
    getParentRoute: () => DashboardOrgEventsIdRoute,
  } as any)

const DashboardOrgEventsIdDetailsIndexRoute =
  DashboardOrgEventsIdDetailsIndexImport.update({
    path: '/details/',
    getParentRoute: () => DashboardOrgEventsIdRoute,
  } as any)

const DashboardOrgEventsIdContentIndexRoute =
  DashboardOrgEventsIdContentIndexImport.update({
    path: '/content/',
    getParentRoute: () => DashboardOrgEventsIdRoute,
  } as any)

const DashboardOrgEventsIdAttendeesIndexRoute =
  DashboardOrgEventsIdAttendeesIndexImport.update({
    path: '/attendees/',
    getParentRoute: () => DashboardOrgEventsIdRoute,
  } as any)

const DashboardOrgEventsIdAgendaIndexRoute =
  DashboardOrgEventsIdAgendaIndexImport.update({
    path: '/agenda/',
    getParentRoute: () => DashboardOrgEventsIdRoute,
  } as any)

const DashboardGuestEventsIdRequestsIndexRoute =
  DashboardGuestEventsIdRequestsIndexImport.update({
    path: '/requests/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

const DashboardGuestEventsIdDetailsIndexRoute =
  DashboardGuestEventsIdDetailsIndexImport.update({
    path: '/details/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

const DashboardGuestEventsIdContentIndexRoute =
  DashboardGuestEventsIdContentIndexImport.update({
    path: '/content/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

const DashboardGuestEventsIdAttendeesIndexRoute =
  DashboardGuestEventsIdAttendeesIndexImport.update({
    path: '/attendees/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

const DashboardGuestEventsIdAgendaIndexRoute =
  DashboardGuestEventsIdAgendaIndexImport.update({
    path: '/agenda/',
    getParentRoute: () => DashboardGuestEventsIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/event-invite/': {
      id: '/event-invite/'
      path: '/event-invite'
      fullPath: '/event-invite'
      preLoaderRoute: typeof EventInviteIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/team-invite/': {
      id: '/team-invite/'
      path: '/team-invite'
      fullPath: '/team-invite'
      preLoaderRoute: typeof TeamInviteIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/org/team': {
      id: '/dashboard/org/team'
      path: '/org/team'
      fullPath: '/dashboard/org/team'
      preLoaderRoute: typeof DashboardOrgTeamImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/account/': {
      id: '/dashboard/account/'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountIndexImport
      parentRoute: typeof DashboardImport
    }
    '/event-invite/accept/': {
      id: '/event-invite/accept/'
      path: '/event-invite/accept'
      fullPath: '/event-invite/accept'
      preLoaderRoute: typeof EventInviteAcceptIndexImport
      parentRoute: typeof rootRoute
    }
    '/event-invite/signup/': {
      id: '/event-invite/signup/'
      path: '/event-invite/signup'
      fullPath: '/event-invite/signup'
      preLoaderRoute: typeof EventInviteSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/organization/': {
      id: '/signup/organization/'
      path: '/signup/organization'
      fullPath: '/signup/organization'
      preLoaderRoute: typeof SignupOrganizationIndexImport
      parentRoute: typeof rootRoute
    }
    '/signup/profile/': {
      id: '/signup/profile/'
      path: '/signup/profile'
      fullPath: '/signup/profile'
      preLoaderRoute: typeof SignupProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/team-invite/accept/': {
      id: '/team-invite/accept/'
      path: '/team-invite/accept'
      fullPath: '/team-invite/accept'
      preLoaderRoute: typeof TeamInviteAcceptIndexImport
      parentRoute: typeof rootRoute
    }
    '/team-invite/signup/': {
      id: '/team-invite/signup/'
      path: '/team-invite/signup'
      fullPath: '/team-invite/signup'
      preLoaderRoute: typeof TeamInviteSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/guest/events/$id': {
      id: '/dashboard/guest/events/$id'
      path: '/guest/events/$id'
      fullPath: '/dashboard/guest/events/$id'
      preLoaderRoute: typeof DashboardGuestEventsIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/events/$id': {
      id: '/dashboard/org/events/$id'
      path: '/org/events/$id'
      fullPath: '/dashboard/org/events/$id'
      preLoaderRoute: typeof DashboardOrgEventsIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/team/roles': {
      id: '/dashboard/org/team/roles'
      path: '/roles'
      fullPath: '/dashboard/org/team/roles'
      preLoaderRoute: typeof DashboardOrgTeamRolesImport
      parentRoute: typeof DashboardOrgTeamImport
    }
    '/dashboard/guest/calendar/': {
      id: '/dashboard/guest/calendar/'
      path: '/guest/calendar'
      fullPath: '/dashboard/guest/calendar'
      preLoaderRoute: typeof DashboardGuestCalendarIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/guest/events/': {
      id: '/dashboard/guest/events/'
      path: '/guest/events'
      fullPath: '/dashboard/guest/events'
      preLoaderRoute: typeof DashboardGuestEventsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/guest/help/': {
      id: '/dashboard/guest/help/'
      path: '/guest/help'
      fullPath: '/dashboard/guest/help'
      preLoaderRoute: typeof DashboardGuestHelpIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/guest/reports/': {
      id: '/dashboard/guest/reports/'
      path: '/guest/reports'
      fullPath: '/dashboard/guest/reports'
      preLoaderRoute: typeof DashboardGuestReportsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/guest/requests/': {
      id: '/dashboard/guest/requests/'
      path: '/guest/requests'
      fullPath: '/dashboard/guest/requests'
      preLoaderRoute: typeof DashboardGuestRequestsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/calendar/': {
      id: '/dashboard/org/calendar/'
      path: '/org/calendar'
      fullPath: '/dashboard/org/calendar'
      preLoaderRoute: typeof DashboardOrgCalendarIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/events/': {
      id: '/dashboard/org/events/'
      path: '/org/events'
      fullPath: '/dashboard/org/events'
      preLoaderRoute: typeof DashboardOrgEventsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/guests/': {
      id: '/dashboard/org/guests/'
      path: '/org/guests'
      fullPath: '/dashboard/org/guests'
      preLoaderRoute: typeof DashboardOrgGuestsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/help/': {
      id: '/dashboard/org/help/'
      path: '/org/help'
      fullPath: '/dashboard/org/help'
      preLoaderRoute: typeof DashboardOrgHelpIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/reports/': {
      id: '/dashboard/org/reports/'
      path: '/org/reports'
      fullPath: '/dashboard/org/reports'
      preLoaderRoute: typeof DashboardOrgReportsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/requests/': {
      id: '/dashboard/org/requests/'
      path: '/org/requests'
      fullPath: '/dashboard/org/requests'
      preLoaderRoute: typeof DashboardOrgRequestsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/org/team/': {
      id: '/dashboard/org/team/'
      path: '/'
      fullPath: '/dashboard/org/team/'
      preLoaderRoute: typeof DashboardOrgTeamIndexImport
      parentRoute: typeof DashboardOrgTeamImport
    }
    '/event-invite/signup/profile/': {
      id: '/event-invite/signup/profile/'
      path: '/event-invite/signup/profile'
      fullPath: '/event-invite/signup/profile'
      preLoaderRoute: typeof EventInviteSignupProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/team-invite/signup/profile/': {
      id: '/team-invite/signup/profile/'
      path: '/team-invite/signup/profile'
      fullPath: '/team-invite/signup/profile'
      preLoaderRoute: typeof TeamInviteSignupProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/guest/events/$id/': {
      id: '/dashboard/guest/events/$id/'
      path: '/'
      fullPath: '/dashboard/guest/events/$id/'
      preLoaderRoute: typeof DashboardGuestEventsIdIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/org/events/$id/': {
      id: '/dashboard/org/events/$id/'
      path: '/'
      fullPath: '/dashboard/org/events/$id/'
      preLoaderRoute: typeof DashboardOrgEventsIdIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
    '/dashboard/org/events/create-event/': {
      id: '/dashboard/org/events/create-event/'
      path: '/org/events/create-event'
      fullPath: '/dashboard/org/events/create-event'
      preLoaderRoute: typeof DashboardOrgEventsCreateEventIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/guest/events/$id/agenda/': {
      id: '/dashboard/guest/events/$id/agenda/'
      path: '/agenda'
      fullPath: '/dashboard/guest/events/$id/agenda'
      preLoaderRoute: typeof DashboardGuestEventsIdAgendaIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/guest/events/$id/attendees/': {
      id: '/dashboard/guest/events/$id/attendees/'
      path: '/attendees'
      fullPath: '/dashboard/guest/events/$id/attendees'
      preLoaderRoute: typeof DashboardGuestEventsIdAttendeesIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/guest/events/$id/content/': {
      id: '/dashboard/guest/events/$id/content/'
      path: '/content'
      fullPath: '/dashboard/guest/events/$id/content'
      preLoaderRoute: typeof DashboardGuestEventsIdContentIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/guest/events/$id/details/': {
      id: '/dashboard/guest/events/$id/details/'
      path: '/details'
      fullPath: '/dashboard/guest/events/$id/details'
      preLoaderRoute: typeof DashboardGuestEventsIdDetailsIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/guest/events/$id/requests/': {
      id: '/dashboard/guest/events/$id/requests/'
      path: '/requests'
      fullPath: '/dashboard/guest/events/$id/requests'
      preLoaderRoute: typeof DashboardGuestEventsIdRequestsIndexImport
      parentRoute: typeof DashboardGuestEventsIdImport
    }
    '/dashboard/org/events/$id/agenda/': {
      id: '/dashboard/org/events/$id/agenda/'
      path: '/agenda'
      fullPath: '/dashboard/org/events/$id/agenda'
      preLoaderRoute: typeof DashboardOrgEventsIdAgendaIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
    '/dashboard/org/events/$id/attendees/': {
      id: '/dashboard/org/events/$id/attendees/'
      path: '/attendees'
      fullPath: '/dashboard/org/events/$id/attendees'
      preLoaderRoute: typeof DashboardOrgEventsIdAttendeesIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
    '/dashboard/org/events/$id/content/': {
      id: '/dashboard/org/events/$id/content/'
      path: '/content'
      fullPath: '/dashboard/org/events/$id/content'
      preLoaderRoute: typeof DashboardOrgEventsIdContentIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
    '/dashboard/org/events/$id/details/': {
      id: '/dashboard/org/events/$id/details/'
      path: '/details'
      fullPath: '/dashboard/org/events/$id/details'
      preLoaderRoute: typeof DashboardOrgEventsIdDetailsIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
    '/dashboard/org/events/$id/requests/': {
      id: '/dashboard/org/events/$id/requests/'
      path: '/requests'
      fullPath: '/dashboard/org/events/$id/requests'
      preLoaderRoute: typeof DashboardOrgEventsIdRequestsIndexImport
      parentRoute: typeof DashboardOrgEventsIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardIndexRoute,
    DashboardOrgTeamRoute: DashboardOrgTeamRoute.addChildren({
      DashboardOrgTeamRolesRoute,
      DashboardOrgTeamIndexRoute,
    }),
    DashboardAccountIndexRoute,
    DashboardGuestEventsIdRoute: DashboardGuestEventsIdRoute.addChildren({
      DashboardGuestEventsIdIndexRoute,
      DashboardGuestEventsIdAgendaIndexRoute,
      DashboardGuestEventsIdAttendeesIndexRoute,
      DashboardGuestEventsIdContentIndexRoute,
      DashboardGuestEventsIdDetailsIndexRoute,
      DashboardGuestEventsIdRequestsIndexRoute,
    }),
    DashboardOrgEventsIdRoute: DashboardOrgEventsIdRoute.addChildren({
      DashboardOrgEventsIdIndexRoute,
      DashboardOrgEventsIdAgendaIndexRoute,
      DashboardOrgEventsIdAttendeesIndexRoute,
      DashboardOrgEventsIdContentIndexRoute,
      DashboardOrgEventsIdDetailsIndexRoute,
      DashboardOrgEventsIdRequestsIndexRoute,
    }),
    DashboardGuestCalendarIndexRoute,
    DashboardGuestEventsIndexRoute,
    DashboardGuestHelpIndexRoute,
    DashboardGuestReportsIndexRoute,
    DashboardGuestRequestsIndexRoute,
    DashboardOrgCalendarIndexRoute,
    DashboardOrgEventsIndexRoute,
    DashboardOrgGuestsIndexRoute,
    DashboardOrgHelpIndexRoute,
    DashboardOrgReportsIndexRoute,
    DashboardOrgRequestsIndexRoute,
    DashboardOrgEventsCreateEventIndexRoute,
  }),
  EventInviteIndexRoute,
  LoginIndexRoute,
  SignupIndexRoute,
  TeamInviteIndexRoute,
  EventInviteAcceptIndexRoute,
  EventInviteSignupIndexRoute,
  SignupOrganizationIndexRoute,
  SignupProfileIndexRoute,
  TeamInviteAcceptIndexRoute,
  TeamInviteSignupIndexRoute,
  EventInviteSignupProfileIndexRoute,
  TeamInviteSignupProfileIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/event-invite/",
        "/login/",
        "/signup/",
        "/team-invite/",
        "/event-invite/accept/",
        "/event-invite/signup/",
        "/signup/organization/",
        "/signup/profile/",
        "/team-invite/accept/",
        "/team-invite/signup/",
        "/event-invite/signup/profile/",
        "/team-invite/signup/profile/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/org/team",
        "/dashboard/account/",
        "/dashboard/guest/events/$id",
        "/dashboard/org/events/$id",
        "/dashboard/guest/calendar/",
        "/dashboard/guest/events/",
        "/dashboard/guest/help/",
        "/dashboard/guest/reports/",
        "/dashboard/guest/requests/",
        "/dashboard/org/calendar/",
        "/dashboard/org/events/",
        "/dashboard/org/guests/",
        "/dashboard/org/help/",
        "/dashboard/org/reports/",
        "/dashboard/org/requests/",
        "/dashboard/org/events/create-event/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/event-invite/": {
      "filePath": "event-invite/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/signup/": {
      "filePath": "signup/index.tsx"
    },
    "/team-invite/": {
      "filePath": "team-invite/index.tsx"
    },
    "/dashboard/org/team": {
      "filePath": "dashboard/org/team.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/org/team/roles",
        "/dashboard/org/team/"
      ]
    },
    "/dashboard/account/": {
      "filePath": "dashboard/account/index.tsx",
      "parent": "/dashboard"
    },
    "/event-invite/accept/": {
      "filePath": "event-invite/accept/index.tsx"
    },
    "/event-invite/signup/": {
      "filePath": "event-invite/signup/index.tsx"
    },
    "/signup/organization/": {
      "filePath": "signup/organization/index.tsx"
    },
    "/signup/profile/": {
      "filePath": "signup/profile/index.tsx"
    },
    "/team-invite/accept/": {
      "filePath": "team-invite/accept/index.tsx"
    },
    "/team-invite/signup/": {
      "filePath": "team-invite/signup/index.tsx"
    },
    "/dashboard/guest/events/$id": {
      "filePath": "dashboard/guest/events/$id.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/guest/events/$id/",
        "/dashboard/guest/events/$id/agenda/",
        "/dashboard/guest/events/$id/attendees/",
        "/dashboard/guest/events/$id/content/",
        "/dashboard/guest/events/$id/details/",
        "/dashboard/guest/events/$id/requests/"
      ]
    },
    "/dashboard/org/events/$id": {
      "filePath": "dashboard/org/events/$id.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/org/events/$id/",
        "/dashboard/org/events/$id/agenda/",
        "/dashboard/org/events/$id/attendees/",
        "/dashboard/org/events/$id/content/",
        "/dashboard/org/events/$id/details/",
        "/dashboard/org/events/$id/requests/"
      ]
    },
    "/dashboard/org/team/roles": {
      "filePath": "dashboard/org/team/roles.tsx",
      "parent": "/dashboard/org/team"
    },
    "/dashboard/guest/calendar/": {
      "filePath": "dashboard/guest/calendar/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/guest/events/": {
      "filePath": "dashboard/guest/events/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/guest/help/": {
      "filePath": "dashboard/guest/help/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/guest/reports/": {
      "filePath": "dashboard/guest/reports/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/guest/requests/": {
      "filePath": "dashboard/guest/requests/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/calendar/": {
      "filePath": "dashboard/org/calendar/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/events/": {
      "filePath": "dashboard/org/events/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/guests/": {
      "filePath": "dashboard/org/guests/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/help/": {
      "filePath": "dashboard/org/help/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/reports/": {
      "filePath": "dashboard/org/reports/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/requests/": {
      "filePath": "dashboard/org/requests/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/org/team/": {
      "filePath": "dashboard/org/team/index.tsx",
      "parent": "/dashboard/org/team"
    },
    "/event-invite/signup/profile/": {
      "filePath": "event-invite/signup/profile/index.tsx"
    },
    "/team-invite/signup/profile/": {
      "filePath": "team-invite/signup/profile/index.tsx"
    },
    "/dashboard/guest/events/$id/": {
      "filePath": "dashboard/guest/events/$id/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/org/events/$id/": {
      "filePath": "dashboard/org/events/$id/index.tsx",
      "parent": "/dashboard/org/events/$id"
    },
    "/dashboard/org/events/create-event/": {
      "filePath": "dashboard/org/events/create-event/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/guest/events/$id/agenda/": {
      "filePath": "dashboard/guest/events/$id/agenda/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/guest/events/$id/attendees/": {
      "filePath": "dashboard/guest/events/$id/attendees/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/guest/events/$id/content/": {
      "filePath": "dashboard/guest/events/$id/content/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/guest/events/$id/details/": {
      "filePath": "dashboard/guest/events/$id/details/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/guest/events/$id/requests/": {
      "filePath": "dashboard/guest/events/$id/requests/index.tsx",
      "parent": "/dashboard/guest/events/$id"
    },
    "/dashboard/org/events/$id/agenda/": {
      "filePath": "dashboard/org/events/$id/agenda/index.tsx",
      "parent": "/dashboard/org/events/$id"
    },
    "/dashboard/org/events/$id/attendees/": {
      "filePath": "dashboard/org/events/$id/attendees/index.tsx",
      "parent": "/dashboard/org/events/$id"
    },
    "/dashboard/org/events/$id/content/": {
      "filePath": "dashboard/org/events/$id/content/index.tsx",
      "parent": "/dashboard/org/events/$id"
    },
    "/dashboard/org/events/$id/details/": {
      "filePath": "dashboard/org/events/$id/details/index.tsx",
      "parent": "/dashboard/org/events/$id"
    },
    "/dashboard/org/events/$id/requests/": {
      "filePath": "dashboard/org/events/$id/requests/index.tsx",
      "parent": "/dashboard/org/events/$id"
    }
  }
}
ROUTE_MANIFEST_END */
